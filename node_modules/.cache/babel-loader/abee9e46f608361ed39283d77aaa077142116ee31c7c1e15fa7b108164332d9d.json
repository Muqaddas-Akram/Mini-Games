{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muqaddas\\\\Desktop\\\\My Code\\\\mini-games\\\\mini-games\\\\src\\\\third-game\\\\SlotMachine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useMediaQuery } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateRandomSlotValue = () => {\n  const symbols = ['Mercedes-Benz', 'Lamborghini', 'Ferrari', 'Supra', 'Bentley'];\n  const randomIndex = Math.floor(Math.random() * symbols.length);\n  return symbols[randomIndex];\n};\nconst SlotMachine = () => {\n  _s();\n  const initialSlots = Array.from({\n    length: 3\n  }, generateRandomSlotValue);\n  const [slots, setSlots] = useState(initialSlots);\n  const [isSpinning, setIsSpinning] = useState(false);\n  useEffect(() => {\n    if (isSpinning) {\n      const interval = setInterval(() => {\n        setSlots(prevSlots => prevSlots.map(() => generateRandomSlotValue()));\n      }, 100);\n      setTimeout(() => {\n        clearInterval(interval);\n        setIsSpinning(false);\n      }, 2000);\n    }\n  }, [isSpinning]);\n  const handleSpin = () => {\n    if (!isSpinning) {\n      setSlots(initialSlots);\n      setIsSpinning(true);\n    }\n  };\n  const isSmallScreen = useMediaQuery('(max-width:600px)');\n  const cardStyle = {\n    margin: '10px',\n    padding: '20px',\n    border: '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: '#f8f8f8',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    minWidth: isSmallScreen ? '80px' : '100px',\n    flex: '1 1 auto'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n      },\n      children: slots.map((symbol, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: cardStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `images/${symbol.toLowerCase()}.png`,\n          alt: symbol,\n          style: {\n            height: isSmallScreen ? '40px' : '50px',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: isSmallScreen ? '14px' : '18px',\n            fontWeight: 'bold',\n            color: '#333',\n            textTransform: 'capitalize'\n          },\n          children: symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSpin,\n      disabled: isSpinning,\n      style: {\n        marginTop: '20px',\n        padding: '10px 20px',\n        fontSize: isSmallScreen ? '14px' : '16px',\n        backgroundColor: '#4caf50',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        outline: 'none',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)'\n      },\n      children: isSpinning ? 'Spinning...' : 'Click Here'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SlotMachine, \"DLXkjDTmyINDhWFszrn1rdt/wbM=\", false, function () {\n  return [useMediaQuery];\n});\n_c = SlotMachine;\nexport default SlotMachine;\nvar _c;\n$RefreshReg$(_c, \"SlotMachine\");","map":{"version":3,"names":["React","useState","useEffect","useMediaQuery","jsxDEV","_jsxDEV","generateRandomSlotValue","symbols","randomIndex","Math","floor","random","length","SlotMachine","_s","initialSlots","Array","from","slots","setSlots","isSpinning","setIsSpinning","interval","setInterval","prevSlots","map","setTimeout","clearInterval","handleSpin","isSmallScreen","cardStyle","margin","padding","border","borderRadius","backgroundColor","boxShadow","display","alignItems","justifyContent","flexDirection","minWidth","flex","style","textAlign","marginTop","children","flexWrap","symbol","index","src","toLowerCase","alt","height","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","fontWeight","color","textTransform","onClick","disabled","cursor","outline","_c","$RefreshReg$"],"sources":["C:/Users/Muqaddas/Desktop/My Code/mini-games/mini-games/src/third-game/SlotMachine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMediaQuery } from '@mui/material';\r\n\r\nconst generateRandomSlotValue = () => {\r\n  const symbols = ['Mercedes-Benz', 'Lamborghini', 'Ferrari', 'Supra', 'Bentley'];\r\n  const randomIndex = Math.floor(Math.random() * symbols.length);\r\n  return symbols[randomIndex];\r\n};\r\n\r\nconst SlotMachine = () => {\r\n  const initialSlots = Array.from({ length: 3 }, generateRandomSlotValue);\r\n  const [slots, setSlots] = useState(initialSlots);\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isSpinning) {\r\n      const interval = setInterval(() => {\r\n        setSlots((prevSlots) =>\r\n          prevSlots.map(() => generateRandomSlotValue())\r\n        );\r\n      }, 100);\r\n\r\n      setTimeout(() => {\r\n        clearInterval(interval);\r\n        setIsSpinning(false);\r\n      }, 2000);\r\n    }\r\n  }, [isSpinning]);\r\n\r\n  const handleSpin = () => {\r\n    if (!isSpinning) {\r\n      setSlots(initialSlots);\r\n      setIsSpinning(true);\r\n    }\r\n  };\r\n\r\n  const isSmallScreen = useMediaQuery('(max-width:600px)');\r\n\r\n  const cardStyle = {\r\n    margin: '10px',\r\n    padding: '20px',\r\n    border: '2px solid #ddd',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#f8f8f8',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    minWidth: isSmallScreen ? '80px' : '100px',\r\n    flex: '1 1 auto',\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n      <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n        {slots.map((symbol, index) => (\r\n          <div style={cardStyle} key={index}>\r\n            <img\r\n              src={`images/${symbol.toLowerCase()}.png`} \r\n              alt={symbol}\r\n              style={{ height: isSmallScreen ? '40px' : '50px', marginBottom: '10px' }}\r\n            />\r\n            <div\r\n              style={{\r\n                fontSize: isSmallScreen ? '14px' : '18px',\r\n                fontWeight: 'bold',\r\n                color: '#333',\r\n                textTransform: 'capitalize',\r\n              }}\r\n            >\r\n              {symbol}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button\r\n        onClick={handleSpin}\r\n        disabled={isSpinning}\r\n        style={{\r\n          marginTop: '20px',\r\n          padding: '10px 20px',\r\n          fontSize: isSmallScreen ? '14px' : '16px',\r\n          backgroundColor: '#4caf50',\r\n          color: '#fff',\r\n          border: 'none',\r\n          borderRadius: '4px',\r\n          cursor: 'pointer',\r\n          outline: 'none',\r\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n        }}\r\n      >\r\n        {isSpinning ? 'Spinning...' : 'Click Here'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotMachine;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}